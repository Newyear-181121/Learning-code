package collection_2;

import java.util.LinkedList;

import character.Hero;

/**
 * 双向链表 - Deque 
 * @author New year
 *
 *
 *除了实现了List接口外，LinkedList还实现了双向链表结构Deque，可以很方便的在头尾插入删除数据
 *
 *什么是链表结构: 与数组结构相比较，数组结构，就好像是电影院，每个位置都有标示，每个位置之间的间隔都是一样的。 而链表就相当于佛珠，每个珠子，只连接前一个和后一个，不用关心除此之外的其他佛珠在哪里。 
 */
public class TestCollection1_2 {

	public static void main(String[] args) {

		//LinkedList是一个双向链表结构的list
		LinkedList<Hero> ll = new LinkedList<Hero>();
		
		//所以可以很方便的在头部和尾部插入数据
        //在最后插入新的英雄
		
		ll.addLast(new Hero("hero1"));	//一个构造器
		ll.addLast(new Hero("hero2"));	//一个构造器
		ll.addLast(new Hero("hero3"));	//一个构造器			//一共三个构造器。
		System.out.println(ll);
		
		//在最前面插入新的英雄
		ll.addFirst(new Hero("heroX"));
		System.out.println(ll);
		
		//查看最前面的英雄
		System.out.println(ll.getFirst());
		
		//查看最后面的英雄
		System.out.println(ll.getLast());
		
		//查看不会导致英雄被删除
		System.out.println(ll);
		//取出最前面的英雄
		System.out.println(ll.removeFirst());
		
		//取出最后面的英雄
		System.out.println(ll.removeLast());
		
		//取出会导致英雄被删除
		System.out.println(ll);
	}

}
